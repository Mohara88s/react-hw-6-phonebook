{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/Contact/Contact.module.css","App.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","hendelInputChange","event","setState","currentTarget","value","hendelSubmit","preventDefault","newContact","id","uuidv4","props","onSubmit","className","styles","this","type","pattern","title","required","onChange","Component","Filter","Contact","onDelete","button","onClick","ContactList","contacts","onDeleteContact","map","item","contactsActions","addContact","createAction","deleteContact","changeFilter","connect","items","filter","dispatch","onAddContact","contact","contactId","onChangeFilter","useEffect","localStorage","setItem","JSON","stringify","contactsFiltred","toLowerCase","includes","toLocaleLowerCase","container","initialItemsState","parse","window","getItem","createReducer","actions","payload","some","contactItem","alert","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83005814.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__14OTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2j9ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__3QxK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3vsok\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  hendelInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n  hendelSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.onSubmit(newContact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.ContactForm} onSubmit={this.hendelSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.hendelInputChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.hendelInputChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const hendelFindeInputChange = event => {\r\n    onChange(event.currentTarget.value);\r\n  };\r\n  return (\r\n    <label className={styles.Filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={hendelFindeInputChange}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name} {number}\r\n      </p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact/Contact';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <Contact\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add');\nconst deleteContact = createAction('contac/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\n\nexport default contactsActions;\n","import { useEffect } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport styles from './App.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from './redux/contacts/contacts-actions';\r\n\r\nfunction App({ items, filter, onAddContact, onDeleteContact, onChangeFilter }) {\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  const contactsFiltred = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>Phonebook</h2>\r\n      <ContactForm contacts={items} onSubmit={onAddContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={onChangeFilter} />\r\n      <ContactList\r\n        contacts={contactsFiltred}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: contact => dispatch(contactsActions.addContact(contact)),\r\n  onDeleteContact: contactId =>\r\n    dispatch(contactsActions.deleteContact(contactId)),\r\n  onChangeFilter: value => dispatch(contactsActions.changeFilter(value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import actions from './/contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialItemsState =\n  JSON.parse(window.localStorage.getItem('contacts')) || [];\n\nconst items = createReducer(initialItemsState, {\n  [actions.addContact]: (state, { payload }) => {\n    {\n      const isAvailable = state.some(\n        contactItem =>\n          contactItem.name.toLowerCase() === payload.name.toLowerCase(),\n      );\n      if (isAvailable) {\n        alert(`${payload.name} is already in contacts.`);\n        return state;\n      }\n    }\n    return [...state, payload];\n  },\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2LBW8\",\"item\":\"ContactList_item__3qD73\"};"],"sourceRoot":""}