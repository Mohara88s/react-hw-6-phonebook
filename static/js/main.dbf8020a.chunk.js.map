{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","App.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","contactsActions","addContact","createAction","deleteContact","changeFilter","ContactForm","state","name","number","hendelInputChange","event","setState","currentTarget","value","hendelSubmit","preventDefault","newContact","id","uuidv4","props","onAddContact","className","styles","onSubmit","this","type","pattern","title","required","onChange","Component","connect","dispatch","contact","filter","contacts","onChangeFilter","Filter","onDeleteContact","contactId","button","onClick","items","ContactList","toLowerCase","includes","map","item","App","container","initialItemsState","JSON","parse","window","localStorage","getItem","createReducer","actions","payload","some","contactItem","alert","setItem","stringify","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbf8020a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2LBW8\",\"item\":\"ContactList_item__3qD73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__14OTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2j9ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__-hmjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3vsok\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add');\nconst deleteContact = createAction('contact/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\n\nexport default contactsActions;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  hendelInputChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n  hendelSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onAddContact(newContact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.hendelSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ]+(([' -][a-zA-Zа-яА-ЯІіЇїҐґ ])?[a-zA-Zа-яА-ЯІіЇїҐґ]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.hendelInputChange}\n            value={this.state.number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: contact => dispatch(contactsActions.addContact(contact)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label className={styles.Filter}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={onChangeFilter}\n        value={filter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.contacts.filter,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event =>\n    dispatch(contactsActions.changeFilter(event.currentTarget.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Contact = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <>\n      <p>\n        {name} {number}\n      </p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId =>\n    dispatch(contactsActions.deleteContact(contactId)),\n});\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import React from 'react';\nimport Contact from '../Contact/Contact';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\n\nconst ContactList = ({ contacts, filter }) => {\n  return (\n    <ul className={styles.ContactList}>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()),\n        )\n        .map(({ id, name, number }) => (\n          <li key={id} className={styles.item}>\n            <Contact id={id} name={name} number={number} />\n          </li>\n        ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.items,\n    filter: state.contacts.filter,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import actions from './/contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialItemsState =\n  JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n\nconst items = createReducer(initialItemsState, {\n  [actions.addContact]: (state, { payload }) => {\n    {\n      const isAvailable = state.some(\n        contactItem =>\n          contactItem.name.toLowerCase() === payload.name.toLowerCase(),\n      );\n      if (isAvailable) {\n        alert(`${payload.name} is already in contacts.`);\n        return state;\n      }\n    }\n    window.localStorage.setItem(\n      'contacts',\n      JSON.stringify([...state, payload]),\n    );\n    return [...state, payload];\n  },\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}